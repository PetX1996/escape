#include "ui/menudef.h"

// GLOBAL DEFINITIONS
#define BG_BLACKSCREEN_COLOR 	0.05 0.05 0.05 0.5
#define BG_BACK_COLOR 			0 0 0 0.75

#define BTN_BG_OFF 		0 0 0 0
#define	BTN_BG_MOUSE 	0 1 1 0.25
#define BTN_BG_ON		0 1 1 0.75

#define TEXT_TITLE_COLOR 	0 1 1 1
#define TEXT_NORMAL_COLOR 	1 1 1 1

{
	menuDef
	{	
		name			"TMENU"
		style			WINDOW_STYLE_FILLED
		focuscolor		COLOR_FOCUSED
		blurworld		1.5
		rect			0 0 640 480 HORIZONTAL_ALIGN_FULLSCREEN 0

		onEsc
		{
			scriptMenuResponse "TMENU_esc";
			//close self;
			//close "team_marinesopfor";
		}
		onOpen
		{
			//setDvar cl_bypassMouseInput "1";
			scriptMenuResponse "TMENU_open";
			
			//setLocalVarInt ui_button_focus 0;
			//setLocalVarInt ui_section_focus 0;
			
			//4GF.CZ reklama :)
			//execnow "set TMENU_bottomT 1";
			//execnow "set acp_button_info acp_info_start";
			
			//execnow "set cg_hudChatPosition 5 380";
			//execnow "set acp_section_size 4";
			//execnow "set acp_vis_4 1";
			//execnow "set acp_popup_size 7";
			//execNow "set acp_info_section_0 ahawduia";
		}
		onClose
		{	
			//setDvar cl_bypassMouseInput "0";
			scriptMenuResponse "TMENU_close";
			
			//execnow "set cg_hudChatPosition 5 204";
		}		

		// ================== BACKGROUND ===================== //
		#define BG_X 20
		#define BG_Y 40
		#define BG_WIDTH 600
		#define BG_HEIGHT 400
		
		#define BG_SPACE 10
		#define BG_SECTION_HEIGHT 60
		#define BG_LIST_WIDTH DvarInt( "TMENU_listW" )
		#define BG_LIST_SPACE (5 * (DvarInt( "TMENU_listW" ) / DvarInt( "TMENU_listW" )))
		
		#define ITEM_TITLE_HEIGHT 30
		#define ITEM_ACCEPT_HEIGHT 50
		
		#define ITEM_X (BG_X + BG_SPACE + BG_LIST_WIDTH + BG_LIST_SPACE)
		#define ITEM_Y (BG_Y + (BG_SPACE*2) + BG_SECTION_HEIGHT + ITEM_TITLE_HEIGHT + (BG_SPACE/2))
		#define ITEM_W (BG_WIDTH - ((ITEM_X - BG_X) + BG_SPACE))
		#define ITEM_H (BG_HEIGHT - ((ITEM_Y - BG_Y) + BG_SPACE + (BG_SPACE/2) + ITEM_ACCEPT_HEIGHT))
		// pozadie
		itemDef
		{
			border			1
			bordercolor		0 0 0 1
			bordersize		1
			rect			(BG_X - 1) (BG_Y - 1) BG_WIDTH BG_HEIGHT 0 0
			style			WINDOW_STYLE_FILLED
			backcolor		BG_BLACKSCREEN_COLOR
			visible			1
		}
		
		// kategórie
		itemDef
		{	
			rect			(BG_X + BG_SPACE) (BG_Y + BG_SPACE) (BG_WIDTH - (BG_SPACE*2)) BG_SECTION_HEIGHT 0 0
			style			WINDOW_STYLE_FILLED
			backcolor		BG_BACK_COLOR
			visible			1
		}

		// zoznam
		itemDef
		{	
			rect			(BG_X + BG_SPACE) (BG_Y + (BG_SPACE*2) + BG_SECTION_HEIGHT) 0 (BG_HEIGHT - ((BG_SPACE*3) + BG_SECTION_HEIGHT)) 0 0
			exp				rect W( BG_LIST_WIDTH )
			style			WINDOW_STYLE_FILLED
			backcolor		BG_BACK_COLOR
			visible			1
		}
		
		// info o položke - title
		itemDef
		{	
			rect			0 (BG_Y + (BG_SPACE*2) + BG_SECTION_HEIGHT) 0 ITEM_TITLE_HEIGHT 0 0
			exp				rect X( ITEM_X );
			exp				rect W( ITEM_W );
			style			WINDOW_STYLE_FILLED
			backcolor		BG_BACK_COLOR
			visible			1
		}		
		
		// info o položke
		itemDef
		{	
			rect			0 (BG_Y + (BG_SPACE*2) + BG_SECTION_HEIGHT + ITEM_TITLE_HEIGHT + (BG_SPACE/2)) 0 (BG_HEIGHT - ((BG_SPACE*3) + BG_SECTION_HEIGHT + ITEM_TITLE_HEIGHT + (BG_SPACE/2) + ITEM_ACCEPT_HEIGHT + (BG_SPACE/2))) 0 0
			exp				rect X( ITEM_X );
			exp				rect W( ITEM_W );
			style			WINDOW_STYLE_FILLED
			backcolor		BG_BACK_COLOR
			visible			1
		}		
		
		// info o položke - accept
		itemDef
		{	
			rect			0 ((BG_Y + BG_HEIGHT) - (BG_SPACE + ITEM_ACCEPT_HEIGHT)) 0 ITEM_ACCEPT_HEIGHT 0 0
			exp				rect X( ITEM_X );
			exp				rect W( ITEM_W );
			style			WINDOW_STYLE_FILLED
			backcolor		BG_BACK_COLOR
			visible			1
		}			
		
		// fake button
		itemDef
		{
			rect			0 0 640 480 0 0
			type			ITEM_TYPE_BUTTON
			style 			WINDOW_STYLE_EMPTY
			visible			1
		}			
		
		// ================ SECTIONS ============== //
		// dvars
		// TMENU_sectionT<num>
		// TMENU_sectionP<num>
		// TMENU_sectionS
		//
		// responses
		// TMENU_section_<num>
		#define SECTION_MAXNUMBER 8
		#define SECTION_ITEM_WIDTH ((BG_WIDTH - (BG_SPACE*2)) / SECTION_MAXNUMBER)

		itemDef // pointer
		{
			rect			0 (BG_Y + BG_SPACE) SECTION_ITEM_WIDTH BG_SECTION_HEIGHT 0 0
			exp				rect X( (BG_X + BG_SPACE) + (SECTION_ITEM_WIDTH*DvarInt( "TMENU_sectionS" )) );
			style			WINDOW_STYLE_FILLED
			backcolor		BTN_BG_ON
			visible			1
		}
		
		// buttons
		#define SECTION_BUTTON( num, num_s ) \
		itemDef \
		{ \
			rect			((BG_X + BG_SPACE) + (SECTION_ITEM_WIDTH*num)) (BG_Y + BG_SPACE) SECTION_ITEM_WIDTH BG_SECTION_HEIGHT 0 0 \
			name			"SECTION_BUTTON_"num_s \
			style			WINDOW_STYLE_FILLED \
			visible			when( DvarString( "TMENU_sectionT" + num_s ) != "" ) \
			exp				text( DvarString( "TMENU_sectionT" + num_s ) ); \
			textscale		FONTSCALE_SMALL \
			textalign		ITEM_ALIGN_BOTTOM_CENTER \
			forecolor		TEXT_NORMAL_COLOR \
			backcolor		BTN_BG_OFF \
			decoration \
		} \
		itemDef \
		{ \
			rect			((BG_X + BG_SPACE) + (SECTION_ITEM_WIDTH*num)) (BG_Y + BG_SPACE) SECTION_ITEM_WIDTH (BG_SECTION_HEIGHT - 14) 0 0 \
			style 			WINDOW_STYLE_SHADER \
			exp				material( DvarString( "TMENU_sectionP" + num_s ) ); \
			visible			when( DvarString( "TMENU_sectionP" + num_s ) != "" ) \
		} \
		itemDef \
		{ \
			rect			((BG_X + BG_SPACE) + (SECTION_ITEM_WIDTH*num)) (BG_Y + BG_SPACE) SECTION_ITEM_WIDTH BG_SECTION_HEIGHT 0 0 \
			style			WINDOW_STYLE_EMPTY \
			type			ITEM_TYPE_BUTTON \
			visible			when( DvarString( "TMENU_sectionT" + num_s ) != "" ) \
			mouseEnter		{ setitemcolor "SECTION_BUTTON_"num_s backcolor BTN_BG_MOUSE; } \
			mouseExit		{ setitemcolor "SECTION_BUTTON_"num_s backcolor BTN_BG_OFF; } \
			action			{ play "mouse_click"; scriptMenuResponse "TMENU_section_"num_s; } \
		} \
		
		SECTION_BUTTON( 0, "0" )
		SECTION_BUTTON( 1, "1" )
		SECTION_BUTTON( 2, "2" )
		SECTION_BUTTON( 3, "3" )
		SECTION_BUTTON( 4, "4" )
		SECTION_BUTTON( 5, "5" )
		SECTION_BUTTON( 6, "6" )
		SECTION_BUTTON( 7, "7" )
		
		// ================= LIST ================= //
		// dvars
		// TMENU_btn<num>
		// TMENU_btnS
		// TMENU_listW
		//
		// responses
		// TMENU_btn_<num>
		#define LIST_BUTTON_SIZE 19
		
		itemDef // pointer
		{
			rect			(BG_X + BG_SPACE) 0 0 LIST_BUTTON_SIZE 0 0
			exp				rect W( BG_LIST_WIDTH )
			exp				rect Y( BG_Y + (BG_SPACE*2) + BG_SECTION_HEIGHT + (LIST_BUTTON_SIZE*DvarInt( "TMENU_btnS" )) );
			style			WINDOW_STYLE_FILLED
			backcolor		BTN_BG_ON
			visible			1
		}
		
		// buttons
		#define LIST_BUTTON( num, num_s ) \
		itemDef \
		{ \
			rect			(BG_X + BG_SPACE) (BG_Y + (BG_SPACE*2) + BG_SECTION_HEIGHT + (LIST_BUTTON_SIZE*num)) 0 LIST_BUTTON_SIZE 0 0 \
			exp				rect W( BG_LIST_WIDTH ) \
			name			"LIST_BUTTON"num_s \
			style 			WINDOW_STYLE_FILLED \
			backcolor		BTN_BG_OFF \
			forecolor		TEXT_NORMAL_COLOR \
			visible			when( DvarString( "TMENU_btn" + num ) != "" ) \
			exp				text( DvarString( "TMENU_btn" + num ) ) \
			textscale		FONTSCALE_SMALL \
			textalign		ITEM_ALIGN_MIDDLE_LEFT \
			textalignx		ITEM_ALIGN_X_MASK \
		} \
		itemDef \
		{ \
			rect			(BG_X + BG_SPACE) (BG_Y + (BG_SPACE*2) + BG_SECTION_HEIGHT + (LIST_BUTTON_SIZE*num)) 0 LIST_BUTTON_SIZE 0 0 \
			exp				rect W( BG_LIST_WIDTH ) \
			type			ITEM_TYPE_BUTTON \
			style 			WINDOW_STYLE_EMPTY \
			visible			when( DvarString( "TMENU_btn" + num ) != "" && DvarString( "TMENU_btn" + num ) != " " ) \
			mouseEnter		{ setitemcolor "LIST_BUTTON"num_s backcolor BTN_BG_MOUSE; } \
			mouseExit		{ setitemcolor "LIST_BUTTON"num_s backcolor BTN_BG_OFF; } \
			action			{ scriptMenuResponse "TMENU_btn_"num_s;} \
		}

		LIST_BUTTON( 0, "0" )
		LIST_BUTTON( 1, "1" )
		LIST_BUTTON( 2, "2" )
		LIST_BUTTON( 3, "3" )
		LIST_BUTTON( 4, "4" )
		LIST_BUTTON( 5, "5" )
		LIST_BUTTON( 6, "6" )
		LIST_BUTTON( 7, "7" )		
		LIST_BUTTON( 8, "8" )	
		LIST_BUTTON( 9, "9" )	
		LIST_BUTTON( 10, "10" )
		LIST_BUTTON( 11, "11" )
		LIST_BUTTON( 12, "12" )
		LIST_BUTTON( 13, "13" )
		LIST_BUTTON( 14, "14" )
		
		// dvars
		// TMENU_next
		// TMENU_prev
		//
		// responses
		// TMENU_next
		// TMENU_prev
		#define LIST_ARROW_SIZE 20
		itemDef // prev
		{
			rect			(BG_X + BG_SPACE) ((BG_Y + BG_HEIGHT) - (BG_SPACE + (BG_SPACE/3) + LIST_ARROW_SIZE)) LIST_ARROW_SIZE LIST_ARROW_SIZE 0 0
			type			ITEM_TYPE_BUTTON
			style 			WINDOW_STYLE_SHADER
			background		"ui_arrow_left"
			forecolor		1 1 1 0.75
			visible			when( DvarInt( "TMENU_prev" ) )
			mouseEnter		{ setcolor forecolor 0 1 1 1; }
			mouseExit		{ setcolor forecolor 1 1 1 0.75; }
			action			{ play "mouse_click"; scriptMenuResponse "TMENU_prev"; }
		}	
		itemDef // next
		{
			rect			0 ((BG_Y + BG_HEIGHT) - (BG_SPACE + (BG_SPACE/3) + LIST_ARROW_SIZE)) LIST_ARROW_SIZE LIST_ARROW_SIZE 0 0
			exp				rect X( ((BG_X + BG_SPACE + BG_LIST_WIDTH) - LIST_ARROW_SIZE) );
			type			ITEM_TYPE_BUTTON
			style 			WINDOW_STYLE_SHADER
			background		"ui_arrow_right"
			forecolor		1 1 1 0.75
			visible			when( DvarInt( "TMENU_next" ) )
			mouseEnter		{ setcolor forecolor 0 1 1 1; }
			mouseExit		{ setcolor forecolor 1 1 1 0.75; }
			action			{ play "mouse_click"; scriptMenuResponse "TMENU_next"; }
		}	
		
		// ================= ITEM ================= //
		
		// width : 576
		// height: 220
		
		// ============================== //
		// title subsection
		// ============================== //
		// dvars
		// TMENU_title
		itemDef // title
		{
			rect			0 (BG_Y + (BG_SPACE*2) + BG_SECTION_HEIGHT) 0 ITEM_TITLE_HEIGHT 0 0
			exp				rect W( (BG_WIDTH - (BG_LIST_WIDTH + (BG_SPACE*3))) );
			exp				rect X( ITEM_X );
			forecolor		TEXT_TITLE_COLOR
			style 			WINDOW_STYLE_EMPTY
			visible			1
			exp				text( DvarString( "TMENU_title" ) );
			textscale		FONTSCALE_BIG
			textalign		ITEM_ALIGN_MIDDLE_LEFT
			textalignx		ITEM_ALIGN_X_MASK
			decoration
		}		
		
		// dvars
		// TMENU_sPic0
		// TMENU_sPic1
		// TMENU_sPic2
		#define ITEM_TITLE_PIC_SPACE 2
		#define ITEM_TITLE_PIC_SIZE (ITEM_TITLE_HEIGHT - (ITEM_TITLE_PIC_SPACE*2))
		itemDef // minPic 0
		{
			rect			((BG_X + BG_WIDTH) - (BG_SPACE + ITEM_TITLE_PIC_SPACE + ITEM_TITLE_PIC_SIZE)) (BG_Y + (BG_SPACE*2) + BG_SECTION_HEIGHT + ITEM_TITLE_PIC_SPACE) ITEM_TITLE_PIC_SIZE ITEM_TITLE_PIC_SIZE 0 0
			forecolor		1 1 1 1
			style 			WINDOW_STYLE_SHADER
			exp				material( DvarString( "TMENU_sPic0" ) );
			visible			when( DvarString( "TMENU_sPic0" ) != "" )
		}			
		itemDef // minPic 1
		{
			rect			((BG_X + BG_WIDTH) - (BG_SPACE + (ITEM_TITLE_PIC_SPACE*2) + (ITEM_TITLE_PIC_SIZE*2))) (BG_Y + (BG_SPACE*2) + BG_SECTION_HEIGHT + ITEM_TITLE_PIC_SPACE) ITEM_TITLE_PIC_SIZE ITEM_TITLE_PIC_SIZE 0 0
			forecolor		1 1 1 1
			style 			WINDOW_STYLE_SHADER
			exp				material( DvarString( "TMENU_sPic1" ) );
			visible			when( DvarString( "TMENU_sPic1" ) != "" )
		}		
		itemDef // minPic 2
		{
			rect			((BG_X + BG_WIDTH) - (BG_SPACE + (ITEM_TITLE_PIC_SPACE*3) + (ITEM_TITLE_PIC_SIZE*3))) (BG_Y + (BG_SPACE*2) + BG_SECTION_HEIGHT + ITEM_TITLE_PIC_SPACE) ITEM_TITLE_PIC_SIZE ITEM_TITLE_PIC_SIZE 0 0
			forecolor		1 1 1 1
			style 			WINDOW_STYLE_SHADER
			exp				material( DvarString( "TMENU_sPic2" ) );
			visible			when( DvarString( "TMENU_sPic2" ) != "" )
		}
		
		// ============================== //
		// text subsection
		// ============================== //
		// dvars
		// TMENU_text<num>
		#define ITEM_TEXT_LINE_SIZE 16.4
		#define ITEM_TEXT_LINE( num ) \
		itemDef \
		{ \
			rect			0 (BG_Y + (BG_SPACE*2) + BG_SECTION_HEIGHT + ITEM_TITLE_HEIGHT + (BG_SPACE/2) + (BG_SPACE/3) + (ITEM_TEXT_LINE_SIZE*num)) 0 ITEM_TEXT_LINE_SIZE 0 0 \
			exp				rect W( (BG_WIDTH - (BG_LIST_WIDTH + (BG_SPACE*3))) ); \
			exp				rect X( (BG_X + BG_SPACE + (BG_SPACE/2) + BG_LIST_SPACE + BG_LIST_WIDTH) ); \
			forecolor		TEXT_NORMAL_COLOR \
			style 			WINDOW_STYLE_EMPTY \
			visible			1 \
			exp				text( DvarString( "TMENU_text" + num ) ); \
			textscale		TEXTSIZE_SMALL \
			textalign		ITEM_ALIGN_MIDDLE_LEFT \
			textalignx		ITEM_ALIGN_X_MASK \
			decoration \
		}
		
		ITEM_TEXT_LINE( 0 )
		ITEM_TEXT_LINE( 1 )
		ITEM_TEXT_LINE( 2 )
		ITEM_TEXT_LINE( 3 )
		ITEM_TEXT_LINE( 4 )
		ITEM_TEXT_LINE( 5 )
		ITEM_TEXT_LINE( 6 )
		ITEM_TEXT_LINE( 7 )
		ITEM_TEXT_LINE( 8 )
		ITEM_TEXT_LINE( 9 )
		ITEM_TEXT_LINE( 10 )
		ITEM_TEXT_LINE( 11 )
		ITEM_TEXT_LINE( 12 )
		
		// ============================== //
		// pictures subsection
		// ============================== //		
		// dvars
		// TMENU_picTopW
		// TMENU_picTopH
		// TMENU_picTopM
		#define ITEM_PIC_TOP_X ((ITEM_X + ITEM_W) - ((BG_SPACE/2) + DvarInt( "TMENU_picTopW" )))
		#define ITEM_PIC_TOP_Y (ITEM_Y + (BG_SPACE/2))
		itemDef // picture top
		{
			rect			0 ITEM_PIC_TOP_Y 0 0 0 0
			exp				rect X( ITEM_PIC_TOP_X );
			exp				rect W( DvarInt( "TMENU_picTopW" ) );
			exp				rect H( DvarInt( "TMENU_picTopH" ) );
			style 			WINDOW_STYLE_SHADER
			exp				material( DvarString( "TMENU_picTopM" ) );
			visible			when( DvarString( "TMENU_picTopM" ) != "" )
		}

		// dvars
		// TMENU_picBottomW
		// TMENU_picBottomH
		// TMENU_picBottomM
		#define ITEM_PIC_BOTTOM_X ((ITEM_X + ITEM_W) - ((BG_SPACE/2) + DvarInt( "TMENU_picBottomW" )))
		#define ITEM_PIC_BOTTOM_Y ((ITEM_Y + ITEM_H) - ((BG_SPACE/2) + DvarInt( "TMENU_picBottomH" )))
		itemDef // picture bottom
		{
			rect			0 0 0 0 0 0
			exp				rect X( ITEM_PIC_BOTTOM_X );
			exp				rect Y( ITEM_PIC_BOTTOM_Y );
			exp				rect W( DvarInt( "TMENU_picBottomW" ) );
			exp				rect H( DvarInt( "TMENU_picBottomH" ) );
			style 			WINDOW_STYLE_SHADER
			exp				material( DvarString( "TMENU_picBottomM" ) );
			visible			when( DvarString( "TMENU_picBottomM" ) != "" )
		}
		
		// dvars
		// TMENU_picMiddleW
		// TMENU_picMiddleH
		// TMENU_picMiddleM
		#define ITEM_PIC_MIDDLE_X ((ITEM_X + ITEM_W) - ((BG_SPACE/2) + DvarInt( "TMENU_picMiddleW" )))
		
		#define ITEM_PIC_MIDDLE_Y_SPACE (((ITEM_PIC_BOTTOM_Y - (ITEM_PIC_TOP_Y + DvarInt( "TMENU_picTopH" ))) - DvarInt( "TMENU_picMiddleH" )) / 2)
		#define ITEM_PIC_MIDDLE_Y (ITEM_PIC_TOP_Y + DvarInt( "TMENU_picTopH" ) + ITEM_PIC_MIDDLE_Y_SPACE)
		itemDef // picture middle
		{
			rect			0 0 0 0 0 0
			exp				rect X( ITEM_PIC_MIDDLE_X );
			exp				rect Y( ITEM_PIC_MIDDLE_Y );
			exp				rect W( DvarInt( "TMENU_picMiddleW" ) );
			exp				rect H( DvarInt( "TMENU_picMiddleH" ) );
			style 			WINDOW_STYLE_SHADER
			exp				material( DvarString( "TMENU_picMiddleM" ) );
			visible			when( DvarString( "TMENU_picMiddleM" ) != "" )
		}

		// ==================== //
		// accept subsection
		// ==================== //
		#define ITEM_ACCEPT_VIS ( DvarInt( "TMENU_bottomT" ) == 0 )
		// dvars
		// TMENU_accept
		//
		// TMENU_acceptStat0_P
		// TMENU_acceptStat0_C
		// TMENU_acceptStat0_N
		// TMENU_acceptStat1_P
		// TMENU_acceptStat1_C
		// TMENU_acceptStat1_N
		// TMENU_acceptStat2_P
		// TMENU_acceptStat2_C
		// TMENU_acceptStat2_N
		// TMENU_acceptStatSize
		//
		// TMENU_acceptVStat_P
		// TMENU_acceptVStat_T
		//
		// responses
		// TMENU_accept
		
		#define ITEM_ACCEPT_Y (ITEM_Y + ITEM_H + (BG_SPACE/2))
		
		#define ITEM_ACCEPT_LINE_HEIGHT (ITEM_ACCEPT_HEIGHT / 3)
		
		#define ITEM_ACCEPT_BTN_W (ITEM_W - 300)
		
		#define ITEM_ACCEPT_COLS_WIDTH ((ITEM_W - ITEM_ACCEPT_BTN_W) / DvarInt( "TMENU_acceptStatSize" ))
		
		#define ITEM_ACCEPT_STAT_BUTTON( num, progressDvar, currentDvar, needDvar ) \
		itemDef \
		{ \
			rect			0 0 0 0 0 0 \
			exp				rect X( ITEM_X + (ITEM_ACCEPT_COLS_WIDTH*num) ); \
			exp				rect W( ITEM_ACCEPT_COLS_WIDTH ); \
			exp				rect Y( ITEM_ACCEPT_Y + (ITEM_ACCEPT_HEIGHT - ((DvarInt( progressDvar ) / 100) * ITEM_ACCEPT_HEIGHT)) ); \
			exp 			rect H( (DvarInt( progressDvar ) / 100) * ITEM_ACCEPT_HEIGHT ); \
			style			WINDOW_STYLE_FILLED \
			backcolor		BTN_BG_MOUSE \
			visible			when( ITEM_ACCEPT_VIS ) \
		} \
		itemDef \
		{ \
			rect			0 ITEM_ACCEPT_Y 0 ITEM_ACCEPT_LINE_HEIGHT 0 0 \
			exp				rect X( ITEM_X + (ITEM_ACCEPT_COLS_WIDTH*num) ); \
			exp				rect W( ITEM_ACCEPT_COLS_WIDTH ); \
			style			WINDOW_STYLE_EMPTY \
			exp				text( DvarString( currentDvar ) ); \
			forecolor		TEXT_NORMAL_COLOR \
			textscale		FONTSCALE_SMALL \
			textalign		ITEM_ALIGN_MIDDLE_CENTER \
			visible			when( ITEM_ACCEPT_VIS ) \
			decoration \
		} \
		itemDef \
		{ \
			rect			0 (ITEM_ACCEPT_Y + ITEM_ACCEPT_LINE_HEIGHT - (ITEM_ACCEPT_LINE_HEIGHT/2.3)) 0 ITEM_ACCEPT_LINE_HEIGHT 0 0 \
			exp				rect X( ITEM_X + (ITEM_ACCEPT_COLS_WIDTH*num) ); \
			exp				rect W( ITEM_ACCEPT_COLS_WIDTH ); \
			style			WINDOW_STYLE_EMPTY \
			text			"___________" \
			forecolor		TEXT_NORMAL_COLOR \
			textscale		FONTSCALE_SMALL \
			textalign		ITEM_ALIGN_MIDDLE_CENTER \
			visible			when( DvarString( needDvar ) != "" && ITEM_ACCEPT_VIS ) \
			decoration \
		} \
		itemDef \
		{ \
			rect			0 (ITEM_ACCEPT_Y + (ITEM_ACCEPT_LINE_HEIGHT*2)) 0 ITEM_ACCEPT_LINE_HEIGHT 0 0 \
			exp				rect X( ITEM_X + (ITEM_ACCEPT_COLS_WIDTH*num) ); \
			exp				rect W( ITEM_ACCEPT_COLS_WIDTH ); \
			style			WINDOW_STYLE_EMPTY \
			exp				text( DvarString( needDvar ) ); \
			forecolor		TEXT_NORMAL_COLOR \
			textscale		FONTSCALE_SMALL \
			textalign		ITEM_ALIGN_MIDDLE_CENTER \
			visible			when( ITEM_ACCEPT_VIS ) \
			decoration \
		}
		
		ITEM_ACCEPT_STAT_BUTTON( 0, "TMENU_acceptStat0_P", "TMENU_acceptStat0_C", "TMENU_acceptStat0_N" )
		ITEM_ACCEPT_STAT_BUTTON( 1, "TMENU_acceptStat1_P", "TMENU_acceptStat1_C", "TMENU_acceptStat1_N" )
		ITEM_ACCEPT_STAT_BUTTON( 2, "TMENU_acceptStat2_P", "TMENU_acceptStat2_C", "TMENU_acceptStat2_N" )
		
		// vertical progress
		itemDef
		{
			rect			0 ITEM_ACCEPT_Y 0 ITEM_ACCEPT_HEIGHT 0 0
			exp				rect X( ITEM_X );
			exp 			rect W( (DvarInt( "TMENU_acceptVStat_P" ) / 100) * ITEM_W );
			style			WINDOW_STYLE_FILLED
			backcolor		BTN_BG_MOUSE
			visible			when( ITEM_ACCEPT_VIS )
		}
		itemDef
		{
			rect			0 ITEM_ACCEPT_Y 0 ITEM_ACCEPT_HEIGHT 0 0
			exp				rect W( ITEM_W );
			exp				rect X( ITEM_X );
			style			WINDOW_STYLE_EMPTY
			exp				text( DvarString( "TMENU_acceptVStat_T" ) );
			forecolor		TEXT_NORMAL_COLOR
			textscale		FONTSCALE_BIG
			textalign		ITEM_ALIGN_MIDDLE_CENTER
			visible			when( ITEM_ACCEPT_VIS )
			decoration
		}
		
		itemDef
		{
			rect			0 ITEM_ACCEPT_Y 0 ITEM_ACCEPT_HEIGHT 0 0 
			exp				rect W( ITEM_ACCEPT_BTN_W );
			exp				rect X( ((ITEM_X + ITEM_W) - ITEM_ACCEPT_BTN_W) );
			name			"ITEM_ACCEPT_BUTTON"
			style			WINDOW_STYLE_FILLED
			backcolor		BTN_BG_OFF
			exp				text( DvarString( "TMENU_accept" ) );
			forecolor		TEXT_NORMAL_COLOR
			textscale		FONTSCALE_EXTRABIG 
			textalign		ITEM_ALIGN_MIDDLE_CENTER 
			visible			when( DvarString( "TMENU_accept" ) != "" && ITEM_ACCEPT_VIS ) 
			decoration 	
		}
		itemDef
		{
			rect			0 ITEM_ACCEPT_Y 0 ITEM_ACCEPT_HEIGHT 0 0
			exp				rect W( ITEM_ACCEPT_BTN_W );
			exp				rect X( ((ITEM_X + ITEM_W) - ITEM_ACCEPT_BTN_W) );
			style			WINDOW_STYLE_EMPTY
			type			ITEM_TYPE_BUTTON
			visible			when( DvarString( "TMENU_accept" ) != "" && ITEM_ACCEPT_VIS ) 
			mouseEnter		{ setitemcolor "ITEM_ACCEPT_BUTTON" backcolor BTN_BG_MOUSE; }
			mouseExit		{ setitemcolor "ITEM_ACCEPT_BUTTON" backcolor BTN_BG_OFF; }
			action			{ play "mouse_click"; scriptMenuResponse "TMENU_accept"; }
		}
		
		// ================================
		// 4gf connect subsection
		// ================================
		#define CONNECT_VIS ( DvarInt( "TMENU_bottomT" ) == 1 )
		
		#define CONNECT_IP_LEFT "88.86.107.135:29550"
		#define CONNECT_TEXT_LEFT0 "4GF.CZ #55"
		#define CONNECT_TEXT_LEFT1 "HARD-MEDIUM MAPS"
		
		#define CONNECT_IP_RIGHT "88.86.107.135:29560"
		#define CONNECT_TEXT_RIGHT0 "4GF.CZ #56"
		#define CONNECT_TEXT_RIGHT1 "EASY-MEDIUM MAPS"
		
		#define CONNECT_WHEEL_SIZE ((ITEM_ACCEPT_HEIGHT / 4) * 3)
		#define CONNECT_WHEEL_SPACE ((ITEM_ACCEPT_HEIGHT - CONNECT_WHEEL_SIZE) / 2)
		
		#define CONNECT_TEXT_HEIGHT (ITEM_ACCEPT_HEIGHT / 2)
		#define CONNECT_ADD_SPACE ( ITEM_W / 8 )
			
		itemDef // left WHEEL
		{
			rect			0 (ITEM_ACCEPT_Y + CONNECT_WHEEL_SPACE) CONNECT_WHEEL_SIZE CONNECT_WHEEL_SIZE 0 0
			exp				rect X( ITEM_X + CONNECT_WHEEL_SPACE );
			style			WINDOW_STYLE_SHADER
			forecolor		TEXT_NORMAL_COLOR
			background		"4gf_wheel"
			visible			when( CONNECT_VIS )
		}		
		itemDef // left 0
		{
			name			"CONNECT_LEFT_0"
			rect			0 ITEM_ACCEPT_Y 0 CONNECT_TEXT_HEIGHT 0 0
			exp				rect W( (ITEM_W / 2) - ( CONNECT_WHEEL_SIZE + (CONNECT_WHEEL_SPACE*2) + CONNECT_ADD_SPACE ) );
			exp				rect X( ITEM_X + CONNECT_WHEEL_SIZE + (CONNECT_WHEEL_SPACE*2) );
			style			WINDOW_STYLE_EMPTY
			text			CONNECT_TEXT_LEFT0
			forecolor		TEXT_NORMAL_COLOR
			textscale		FONTSCALE_SMALL
			textalign		ITEM_ALIGN_MIDDLE_CENTER
			visible			when( CONNECT_VIS )
			decoration
		}
		itemDef // left 1
		{
			name			"CONNECT_LEFT_1"
			rect			0 (ITEM_ACCEPT_Y + CONNECT_TEXT_HEIGHT) 0 CONNECT_TEXT_HEIGHT 0 0
			exp				rect W( (ITEM_W / 2) - ( CONNECT_WHEEL_SIZE + (CONNECT_WHEEL_SPACE*2) + CONNECT_ADD_SPACE ) );
			exp				rect X( ITEM_X + CONNECT_WHEEL_SIZE + (CONNECT_WHEEL_SPACE*2) );
			style			WINDOW_STYLE_EMPTY
			text			CONNECT_TEXT_LEFT1
			forecolor		TEXT_NORMAL_COLOR
			textscale		FONTSCALE_SMALL
			textalign		ITEM_ALIGN_MIDDLE_CENTER
			visible			when( CONNECT_VIS )
			decoration
		}	
		itemDef // left CONNECT
		{
			type			1
			rect			0 ITEM_ACCEPT_Y 0 ITEM_ACCEPT_HEIGHT 0 0
			exp				rect W( ITEM_W / 2 );
			exp				rect X( ITEM_X );
			style			WINDOW_STYLE_EMPTY
			visible			when( CONNECT_VIS && DvarString( "ui_ipaddress" ) != CONNECT_IP_LEFT )
			mouseEnter		{ setitemcolor "CONNECT_LEFT_0" forecolor TEXT_TITLE_COLOR; setitemcolor "CONNECT_LEFT_1" forecolor TEXT_TITLE_COLOR; }
			mouseExit		{ setitemcolor "CONNECT_LEFT_0" forecolor TEXT_NORMAL_COLOR; setitemcolor "CONNECT_LEFT_1" forecolor TEXT_NORMAL_COLOR; }
			action			{ exec "disconnect; wait 50; connect "CONNECT_IP_LEFT; }
		}		
		itemDef // right WHEEL
		{
			rect			0 (ITEM_ACCEPT_Y + CONNECT_WHEEL_SPACE) CONNECT_WHEEL_SIZE CONNECT_WHEEL_SIZE 0 0
			exp				rect X( (ITEM_X + ITEM_W) - (CONNECT_WHEEL_SPACE + CONNECT_WHEEL_SIZE) );
			style			WINDOW_STYLE_SHADER
			forecolor		TEXT_NORMAL_COLOR
			background		"4gf_wheel"
			visible			when( CONNECT_VIS )
		}		
		itemDef // right 0
		{
			name			"CONNECT_RIGHT_0"
			rect			0 ITEM_ACCEPT_Y 0 CONNECT_TEXT_HEIGHT 0 0
			exp				rect W( (ITEM_W / 2) - ( CONNECT_WHEEL_SIZE + (CONNECT_WHEEL_SPACE*2) + CONNECT_ADD_SPACE ) );
			exp				rect X( ITEM_X + (ITEM_W / 2) + CONNECT_ADD_SPACE );
			style			WINDOW_STYLE_EMPTY
			text			CONNECT_TEXT_RIGHT0
			forecolor		TEXT_NORMAL_COLOR
			textscale		FONTSCALE_SMALL
			textalign		ITEM_ALIGN_MIDDLE_CENTER
			visible			when( CONNECT_VIS )
			decoration
		}	
		itemDef // right 1
		{
			name			"CONNECT_RIGHT_1"
			rect			0 (ITEM_ACCEPT_Y + CONNECT_TEXT_HEIGHT) 0 CONNECT_TEXT_HEIGHT 0 0
			exp				rect W( (ITEM_W / 2) - ( CONNECT_WHEEL_SIZE + (CONNECT_WHEEL_SPACE*2) + CONNECT_ADD_SPACE ) );
			exp				rect X( ITEM_X + (ITEM_W / 2) + CONNECT_ADD_SPACE );
			style			WINDOW_STYLE_EMPTY
			text			CONNECT_TEXT_RIGHT1
			forecolor		TEXT_NORMAL_COLOR
			textscale		FONTSCALE_SMALL
			textalign		ITEM_ALIGN_MIDDLE_CENTER
			visible			when( CONNECT_VIS )
			decoration
		}
		itemDef // right CONNECT
		{
			type			1
			rect			0 ITEM_ACCEPT_Y 0 ITEM_ACCEPT_HEIGHT 0 0
			exp				rect W( ITEM_W / 2 );
			exp				rect X( ITEM_X + (ITEM_W / 2) );
			style			WINDOW_STYLE_EMPTY
			visible			when( CONNECT_VIS && DvarString( "ui_ipaddress" ) != CONNECT_IP_RIGHT )
			mouseEnter		{ setitemcolor "CONNECT_RIGHT_0" forecolor TEXT_TITLE_COLOR; setitemcolor "CONNECT_RIGHT_1" forecolor TEXT_TITLE_COLOR; }
			mouseExit		{ setitemcolor "CONNECT_RIGHT_0" forecolor TEXT_NORMAL_COLOR; setitemcolor "CONNECT_RIGHT_1" forecolor TEXT_NORMAL_COLOR; }
			action			{ exec "disconnect; wait 50; connect "CONNECT_IP_RIGHT; }
		}		
		
		// ================= POPUP ==================== //
		
		// dvars
		// TMENU_pp_btns
		// TMENU_pp_name
		// TMENU_pp_btn_<num>
		
		#define POPUP_VIS ( DvarString( "TMENU_pp_name" ) != "" )
		
		#define POPUP_BUTTON_HEIGHT 24
		#define POPUP_START_SPACE 20
		#define POPUP_START_HEIGHT (POPUP_BUTTON_HEIGHT + POPUP_START_SPACE)
		
		#define POPUP_WIDTH 300
		#define POPUP_HEIGHT ( POPUP_START_HEIGHT + (POPUP_BUTTON_HEIGHT * DvarInt( "TMENU_pp_btns" )) )
		
		#define POPUP_X ( 320 - (POPUP_WIDTH/2) )
		#define POPUP_Y ( 240 - (POPUP_HEIGHT/2) )
		
		#define POPUP_BTN_SPACE 2
		
		// tmavá obrazovka
		itemDef
		{
			type			1
			rect			0 0 640 480 0 0
			style			WINDOW_STYLE_FILLED
			backcolor		BG_BACK_COLOR
			visible			when( POPUP_VIS )
			action			{ scriptMenuResponse "TMENU_esc"; }
		}		
		
		// pozadie
		itemDef
		{
			type			1
			border			1
			bordercolor		0.5 0.5 0.5 0.4
			bordersize		2
			rect			(POPUP_X - 4) 0 (POPUP_WIDTH + 4) 0 0 0
			exp				rect Y( (POPUP_Y - 2) );
			exp				rect H( (POPUP_HEIGHT + POPUP_BTN_SPACE) );
			style			WINDOW_STYLE_FILLED
			backcolor		0.05 0.05 0.05 0.75
			visible			when( POPUP_VIS )
		}
		
		// nadpis
		itemDef
		{
			rect			POPUP_X 0 (0-POPUP_WIDTH) POPUP_BUTTON_HEIGHT 0 0
			exp				rect Y( POPUP_Y );
			style			WINDOW_STYLE_SHADER
			background		"gradient_fadein"
			forecolor		0.5 0.5 0.5 0.4
			visible			when( POPUP_VIS )
		}
		itemDef
		{
			rect			POPUP_X 0 POPUP_WIDTH POPUP_BUTTON_HEIGHT 0 0
			exp				rect Y( POPUP_Y );
			style			WINDOW_STYLE_EMPTY
			exp				text( DvarString( "TMENU_pp_name" ) );
			textalign		ITEM_ALIGN_MIDDLE_LEFT
			textalignx		ITEM_ALIGN_X_MASK
			textscale		FONTSCALE_NORMAL
			forecolor		TEXT_TITLE_COLOR
			visible			when( POPUP_VIS )
			decoration
		}	

		// tlaèítka
		#define POPUP_BUTTON( num, num_s ) \
		itemDef \
		{ \
			name			"TMENU_POPUP_BTN_"num_s \
			rect			POPUP_X 0 POPUP_WIDTH (POPUP_BUTTON_HEIGHT-POPUP_BTN_SPACE) 0 0 \
			exp				rect Y( POPUP_Y + POPUP_BUTTON_HEIGHT + POPUP_START_SPACE + (POPUP_BUTTON_HEIGHT*num) ); \
			style			WINDOW_STYLE_SHADER \
			background		"gradient_fadein" \
			forecolor		0.5 0.5 0.5 0.3 \
			visible			when( POPUP_VIS && DvarString( "TMENU_pp_btn_" + num_s ) != "" ) \
		} \
		itemDef \
		{ \
			type			1 \
			rect			POPUP_X 0 (POPUP_WIDTH-4) (POPUP_BUTTON_HEIGHT-POPUP_BTN_SPACE) 0 0 \
			exp				rect Y( POPUP_Y + POPUP_BUTTON_HEIGHT + POPUP_START_SPACE + (POPUP_BUTTON_HEIGHT*num) ); \
			style			WINDOW_STYLE_EMPTY \
			exp				text( DvarString( "TMENU_pp_btn_" + num_s ) ); \
			textalign		ITEM_ALIGN_TOP_RIGHT \
			textalignx		ITEM_ALIGN_LEFT \
			textscale		FONTSCALE_NORMAL \
			forecolor		TEXT_NORMAL_COLOR \
			visible			when( POPUP_VIS && DvarString( "TMENU_pp_btn_" + num_s ) != "" ) \
			mouseEnter		{ setitemcolor "TMENU_POPUP_BTN_"num_s forecolor 0 1 1 0.3; } \
			mouseExit		{ setitemcolor "TMENU_POPUP_BTN_"num_s forecolor 0.5 0.5 0.5 0.3; } \
			action			{ scriptMenuResponse "TMENU_pp_btn_"num_s; } \
		}
		
		POPUP_BUTTON( 0, "0" )
		POPUP_BUTTON( 1, "1" )
		POPUP_BUTTON( 2, "2" )
		POPUP_BUTTON( 3, "3" )
		POPUP_BUTTON( 4, "4" )
	}
}