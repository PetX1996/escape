#include "ui/menudef.h"

// GLOBAL DEFINITIONS
#define BG_BLACKSCREEN_COLOR 	0 0 0 0.6
#define BG_BACK_COLOR 			0 0 0 0.75

#define BTN_OFF			0 0 0 0
#define BTN_HIGHLIGHT	0 1 1 0.25
#define BTN_SELECTED	0 1 1 0.75

#define TEXT_TITLE_COLOR 	0 1 1 1
#define TEXT_NORMAL_COLOR 	1 1 1 1

{
	menuDef
	{	
		name			"SHOP"
		style			WINDOW_STYLE_FILLED
		focuscolor		COLOR_FOCUSED
		blurworld		1.5
		rect			0 0 640 480 HORIZONTAL_ALIGN_FULLSCREEN 0

		onEsc
		{
			scriptMenuResponse "SHOP_esc";
			//close "team_marinesopfor";
		}
		onOpen
		{
			//setDvar cl_bypassMouseInput "1";
			scriptMenuResponse "SHOP_open";
			
			//setLocalVarInt ui_button_focus 0;
			//setLocalVarInt ui_section_focus 0;
			
			//4GF.CZ reklama :)
			//execnow "set TMENU_bottomT 1";
			//execnow "set acp_button_info acp_info_start";
			
			//execnow "set cg_hudChatPosition 5 380";
			//execnow "set acp_section_size 4";
			//execnow "set acp_vis_4 1";
			//execnow "set acp_popup_size 7";
			
			execNow "set SHOP_visInv 1; set SHOP_secS 0";
			
			execNow "set SHOP_visPop 0"; //TEST!
		}
		onClose
		{	
			//setDvar cl_bypassMouseInput "0";
			scriptMenuResponse "SHOP_close";
			
			//execnow "set cg_hudChatPosition 5 204";
		}		

		// ================== BACKGROUND ===================== //
		#define BG_W 600
		#define BG_H 380
		#define BG_X ((640-BG_W)*0.5)
		#define BG_Y ((480-BG_H)*0.5)
		
		#define SPACE 8
		#define SMALLSPACE (SPACE*0.5)
		#define BIGSPACE (SPACE*2)
		
		#define SECTION_TAB_LINE_H 2
		
		#define SECTION_TAB_PRIMARY_COUNT 2
		#define SECTION_TAB_PRIMARY_X SECTION_X
		#define SECTION_TAB_PRIMARY_Y SECTION_Y
		#define SECTION_TAB_PRIMARY_W (SECTION_W/SECTION_TAB_PRIMARY_COUNT)
		#define SECTION_TAB_PRIMARY_H 26
		
		#define SECTION_TAB_WEAPONS_COUNT 10
		#define SECTION_TAB_WEAPONS_X SECTION_X
		#define SECTION_TAB_WEAPONS_Y (SECTION_Y+SECTION_TAB_PRIMARY_H+SMALLSPACE)
		#define SECTION_TAB_WEAPONS_W (SECTION_W/(SECTION_TAB_WEAPONS_COUNT))
		#define SECTION_TAB_WEAPONS_H 20
		
		#define SECTION_X (BG_X+SPACE)
		#define SECTION_Y (BG_Y+SPACE)
		#define SECTION_W (BG_W - (SPACE*2))
		#define SECTION_H (SECTION_TAB_PRIMARY_H+SMALLSPACE+SECTION_TAB_WEAPONS_H)
		
		#define LIST_X (BG_X+SPACE)
		#define LIST_Y (BG_Y+SPACE+SECTION_H+SPACE)
		#define LIST_W 128
		#define LIST_H (BG_H - ((LIST_Y-BG_Y)+SPACE))
		
		#define ITEM_TITLE_X (BG_X+SPACE+LIST_W+SMALLSPACE)
		#define ITEM_TITLE_Y (BG_Y+SPACE+SECTION_H+SPACE)
		#define ITEM_TITLE_W (BG_W-((ITEM_TITLE_X-BG_X)+SPACE))
		#define ITEM_TITLE_H 30
		
		#define ITEM_QUICK_H 30
		#define ITEM_QUICK_W ITEM_TITLE_W
		#define ITEM_QUICK_X ITEM_TITLE_X
		#define ITEM_QUICK_Y ((BG_Y+BG_H)-(SPACE+ITEM_QUICK_H))
		#define ITEM_QUICK_BUY_W 140
		#define ITEM_QUICK_INV_W 100
		
		#define ITEM_X ITEM_TITLE_X
		#define ITEM_Y (ITEM_TITLE_Y+ITEM_TITLE_H+SMALLSPACE)
		#define ITEM_W ITEM_TITLE_W
		#define ITEM_H (BG_H - ((ITEM_Y-BG_Y)+ITEM_QUICK_H+SPACE+SMALLSPACE))
		
		// INVENTORY PAGE
		#define INVENTORY_TITLE_X (BG_X+SPACE)
		#define INVENTORY_TITLE_Y (SECTION_Y+SECTION_H+SPACE)
		#define INVENTORY_TITLE_W ((BG_W - (SPACE*3))*0.5)
		#define INVENTORY_TITLE_H 30
		
		#define INVENTORY_X INVENTORY_TITLE_X
		#define INVENTORY_Y (INVENTORY_TITLE_Y+INVENTORY_TITLE_H+SMALLSPACE)
		#define INVENTORY_W INVENTORY_TITLE_W
		#define INVENTORY_H (BG_H - ((INVENTORY_Y-BG_Y)+SPACE))
		
		#define QUICK_TITLE_X (INVENTORY_TITLE_X+INVENTORY_TITLE_W+SPACE)
		#define QUICK_TITLE_Y (SECTION_Y+SECTION_H+SPACE)
		#define QUICK_TITLE_W ((BG_W - (SPACE*3))*0.5)
		#define QUICK_TITLE_H 30
		
		#define QUICK_X QUICK_TITLE_X
		#define QUICK_Y (QUICK_TITLE_Y+QUICK_TITLE_H+SMALLSPACE)
		#define QUICK_W QUICK_TITLE_W
		#define QUICK_H (BG_H - ((QUICK_Y-BG_Y)+SPACE))
		
		//#define SECTION_MAXNUMBER 8
		//#define SECTION_ITEM_W (SECTION_W / SECTION_MAXNUMBER)
		
		#define LIST_ITEM_H 19
		#define LIST_BUTTONSCOUNT 15
		
		#define CURRENT_SECTION DvarInt( "SHOP_secS" )
		#define CURRENT_SECTION_WEAPONS DvarString( "SHOP_weapS" )
		#define CURRENT_SECTION_WEAPONS_S DvarString( "SHOP_weapSs" )
		#define CURRENT_PAGE DvarInt( "SHOP_page" )
		
		#define VIS_INVENTORY 	( DvarInt( "SHOP_visInv" ) )
		#define VIS_WEAPONS		( DvarInt( "SHOP_visInv" ) == 0 )
		#define VIS_WEAPONS_CONTENT ( VIS_WEAPONS && DvarInt( "SHOP_visCon" ) )
		#define VIS_POPUP 		( DvarInt( "SHOP_visPop" ) )
		
		#define TABLE_ITEMSCOUNT 	DvarInt( "SHOP_Tsize" )
		
		#define ITEM_INDEX		DvarInt( "SHOP_Tsel" )
		#define ITEM_TYPE		DvarString( "SHOP_weapSs" )
		#define ITEM_STAT 		DvarString( "SHOP_itemStat" )
		#define ITEM_NAME 		DvarString( "SHOP_itemName" )
		#define ITEM_INFO 		DvarString( "SHOP_itemDes" )
		#define ITEM_ICON 		DvarString( "SHOP_itemImg" )
		#define ITEM_PERMISSION DvarString( "SHOP_itemPerm" )
		#define ITEM_PRICE 		DvarString( "SHOP_itemXp" )
		#define ITEM_RANK 		DvarString( "SHOP_itemLvl" )
		#define ITEM_MONEY 		DvarString( "SHOP_itemMon" )
		
		#define ITEM_PRIMARY_ACC DvarString( "SHOP_itemAcc" )
		#define ITEM_PRIMARY_DMG DvarString( "SHOP_itemDmg" )
		#define ITEM_PRIMARY_RNG DvarString( "SHOP_itemRng" )
		#define ITEM_PRIMARY_FRT DvarString( "SHOP_itemFrt" )
		#define ITEM_PRIMARY_MOB DvarString( "SHOP_itemMob" )
		
		#define ISPRIMARYWEAPON( type ) \
			( type == "Assault" || type == "SMG" || type == "LMG" || type == "Shotgun" || type == "Sniper" )
		
		#define ISGRENADE( type ) \
			( type == "Grenade" )
			
		#define ISEQUIPMENT( type ) \
			( type == "Equipment" )
			
		#define ISGEAR( type ) \
			( type == "Gear" )
			
		// je dostupný stat?
		#define ISSTATAVAILABLE( statIndex ) \
			( stat(int(TableLookUp( "mp/FreeStatsTable.csv", 0, statIndex, 1 ))) == int(TableLookUp( "mp/FreeStatsTable.csv", 0, statIndex, 2 )) )
		
		// dostupné po kúpe za XP a zároveò dostupné pre kúpu za money
		#define ISAVAILABLEFULL( Tstat, Tperm, Trank, Tmoney ) \
			( ISAVAILABLEPERM( Tstat, Tperm, Trank ) && ISAVAILABLEMONEY( Tmoney ) )
		
		// je dostupné po kúpe za XP/iný spôsob
		#define ISAVAILABLEPERM( Tstat, Tperm, Trank ) \
			( Tperm == "1" || (Tperm == "2" && ISSTATAVAILABLE(Tstat) == 1) || (Tperm == "3" && ISAVAILABLERANK(Trank)) )
		
		// je dostatok prachov na kúpu?
		#define ISAVAILABLEMONEY( Tmoney ) \
			( DvarInt("hud_money") >= int(Tmoney) )
		
		// je dostupné na kúpu za XP?
		#define ISAVAILABLETOXPBUY( Tstat, Tperm, Tprice ) \
			( Tperm == "2" && Tprice != "0" && ISSTATAVAILABLE(Tstat) == 0 )
		
		// je dostatoèný poèet LVL?
		#define ISAVAILABLERANK( Trank ) \
			( stat(2350) >= Trank )
		
		// je dostatoèný poèet XP?
		#define ISAVAILABLEPRICE( Tprice ) \
			( stat(2301) >= Tprice )
		
		// je už item zakúpený?
		#define ISALREADYBUYED( lineIndex ) \
			( DvarInt("SHOP_invPrim") == int(lineIndex) || DvarInt("SHOP_invFrag") == int(lineIndex) || DvarInt("SHOP_invSFrag") == int(lineIndex) || DvarInt("SHOP_invEq") == int(lineIndex) || DvarInt("SHOP_invGr") == int(lineIndex) )
		
		// pozadie
		itemDef
		{
			//border			1
			//bordercolor		0 0 0 1
			//bordersize		1
			rect			BG_X BG_Y BG_W BG_H 0 0
			style			WINDOW_STYLE_FILLED
			backcolor		BG_BLACKSCREEN_COLOR
			visible			1
		}

		// zoznam
		itemDef
		{	
			rect			LIST_X LIST_Y LIST_W LIST_H 0 0
			//exp				rect W( BG_LIST_WIDTH )
			style			WINDOW_STYLE_FILLED
			backcolor		BG_BACK_COLOR
			visible			when( VIS_WEAPONS )
		}
		
		// info o položke - title
		itemDef
		{	
			rect			ITEM_TITLE_X ITEM_TITLE_Y ITEM_TITLE_W ITEM_TITLE_H 0 0
			//exp				rect X( ITEM_X );
			//exp				rect W( ITEM_W );
			style			WINDOW_STYLE_FILLED
			backcolor		BG_BACK_COLOR
			visible			when( VIS_WEAPONS )
		}		
		
		// info o položke
		itemDef
		{	
			rect			ITEM_X ITEM_Y ITEM_W ITEM_H 0 0
			//exp				rect X( ITEM_X );
			//exp				rect W( ITEM_W );
			style			WINDOW_STYLE_FILLED
			backcolor		BG_BACK_COLOR
			visible			when( VIS_WEAPONS )
		}		
		
		// info o položke quick
		itemDef
		{	
			rect			ITEM_QUICK_X ITEM_QUICK_Y ITEM_QUICK_W ITEM_QUICK_H 0 0
			//exp				rect X( ITEM_X );
			//exp				rect W( ITEM_W );
			style			WINDOW_STYLE_FILLED
			backcolor		BG_BACK_COLOR
			visible			when( VIS_WEAPONS )
		}		
		
		// INVENTORY PAGE
		// inventory title
		itemDef
		{
			rect			INVENTORY_TITLE_X INVENTORY_TITLE_Y INVENTORY_TITLE_W INVENTORY_TITLE_H 0 0
			style			WINDOW_STYLE_FILLED
			backcolor		BG_BACK_COLOR
			forecolor		TEXT_TITLE_COLOR
			text			"Inventory"
			textalign		ITEM_ALIGN_MIDDLE_CENTER
			textscale		FONTSCALE_NORMAL
			visible			when( VIS_INVENTORY )			
		}
		// inventory
		itemDef
		{
			rect			INVENTORY_X INVENTORY_Y INVENTORY_W INVENTORY_H 0 0
			style			WINDOW_STYLE_FILLED
			backcolor		BG_BACK_COLOR
			visible			when( VIS_INVENTORY )			
		}
		
		// quick title
		itemDef
		{
			rect			QUICK_TITLE_X QUICK_TITLE_Y QUICK_TITLE_W QUICK_TITLE_H 0 0
			style			WINDOW_STYLE_FILLED
			backcolor		BG_BACK_COLOR
			forecolor		TEXT_TITLE_COLOR
			text			"Quick Buy"
			textalign		ITEM_ALIGN_MIDDLE_CENTER
			textscale		FONTSCALE_NORMAL
			visible			when( VIS_INVENTORY )			
		}
		// quick
		itemDef
		{
			rect			QUICK_X QUICK_Y QUICK_W QUICK_H 0 0
			style			WINDOW_STYLE_FILLED
			backcolor		BG_BACK_COLOR
			visible			when( VIS_INVENTORY )			
		}		
		
		// fake button
		itemDef
		{
			rect			0 0 640 480 0 0
			type			ITEM_TYPE_BUTTON
			style 			WINDOW_STYLE_EMPTY
			visible			1
		}			
		
		// ================ SECTIONS ============== //
		// inventory/weapons
		itemDef // section background
		{	
			rect			SECTION_X SECTION_TAB_PRIMARY_Y SECTION_W SECTION_TAB_PRIMARY_H 0 0
			style			WINDOW_STYLE_FILLED
			backcolor		BG_BACK_COLOR
			visible			1
		}
		itemDef // section line
		{	
			rect			SECTION_X ((SECTION_TAB_PRIMARY_Y+SECTION_TAB_PRIMARY_H)-SECTION_TAB_LINE_H) SECTION_W SECTION_TAB_LINE_H 0 0
			style			WINDOW_STYLE_FILLED
			backcolor		BTN_HIGHLIGHT
			visible			1
		}		
		itemDef // subsection background
		{	
			rect			SECTION_X SECTION_TAB_WEAPONS_Y SECTION_W SECTION_TAB_WEAPONS_H 0 0
			style			WINDOW_STYLE_FILLED
			backcolor		BG_BACK_COLOR
			visible			1
		}
		itemDef // subsection line
		{	
			rect			SECTION_X ((SECTION_TAB_WEAPONS_Y+SECTION_TAB_WEAPONS_H)-SECTION_TAB_LINE_H) SECTION_W SECTION_TAB_LINE_H 0 0
			style			WINDOW_STYLE_FILLED
			backcolor		BTN_HIGHLIGHT
			visible			1
		}
		
		itemDef // section pointer
		{
			rect			0 SECTION_TAB_PRIMARY_Y SECTION_TAB_PRIMARY_W (SECTION_TAB_PRIMARY_H-SECTION_TAB_LINE_H) 0 0
			exp				rect X( SECTION_TAB_PRIMARY_X + (SECTION_TAB_PRIMARY_W*CURRENT_SECTION) )
			style			WINDOW_STYLE_FILLED
			backcolor		BTN_HIGHLIGHT
			visible			1		
		}
		#define SECTION_BUTTON( num, num_s, title, onClick ) \
			itemDef \
			{ \
				rect			(SECTION_TAB_PRIMARY_X + (SECTION_TAB_PRIMARY_W*num)) SECTION_TAB_PRIMARY_Y SECTION_TAB_PRIMARY_W SECTION_TAB_PRIMARY_H 0 0 \
				style			WINDOW_STYLE_FILLED \
				type			ITEM_TYPE_BUTTON \
				visible			1 \
				text			title \
				textscale		FONTSCALE_NORMAL \
				textalign		ITEM_ALIGN_MIDDLE_CENTER \
				forecolor		TEXT_NORMAL_COLOR \
				backcolor		BTN_OFF \
				action			{ play "mouse_click"; execNow "set SHOP_secS "num_s; onClick } \
			}
		
		SECTION_BUTTON( 0, "0", "INVENTORY", execNow "set SHOP_visInv 1"; )
		SECTION_BUTTON( 1, "1", "WEAPONS", execNow "set SHOP_visInv 0; set SHOP_weapS 0; set SHOP_weapSs Assault; set SHOP_visCon 0"; )
		
		itemDef // weapons pointer
		{
			rect			0 SECTION_TAB_WEAPONS_Y SECTION_TAB_WEAPONS_W (SECTION_TAB_WEAPONS_H-SECTION_TAB_LINE_H) 0 0
			exp				rect X( SECTION_TAB_WEAPONS_X + (SECTION_TAB_WEAPONS_W*CURRENT_SECTION_WEAPONS) )
			style			WINDOW_STYLE_FILLED
			backcolor		BTN_HIGHLIGHT
			visible			when( VIS_WEAPONS )
		}
		#define SECTION_WEAPONS_BUTTON( num, num_s, title, startIndex, itemsCount ) \
			itemDef \
			{ \
				rect			(SECTION_TAB_WEAPONS_X + (SECTION_TAB_WEAPONS_W*num)) SECTION_TAB_WEAPONS_Y SECTION_TAB_WEAPONS_W SECTION_TAB_WEAPONS_H 0 0 \
				style			WINDOW_STYLE_FILLED \
				type			ITEM_TYPE_BUTTON \
				visible			when( VIS_WEAPONS ) \
				text			title \
				textscale		0.3333 \
				textalign		ITEM_ALIGN_MIDDLE_CENTER \
				forecolor		TEXT_NORMAL_COLOR \
				backcolor		BTN_OFF \
				action			{ play "mouse_click"; execNow "set SHOP_Tsize "itemsCount"; set SHOP_Tsel "startIndex"; set SHOP_visCon 0; set SHOP_weapS "num_s"; set SHOP_weapSs "title"; set SHOP_visInv 0; set SHOP_page 0"; } \
			} \
		
		// ================= LIST ================= //
		// responses
		// SHOP_btn_<num>
		
		// buttons

		#define ITEM( listIndex, page, TlineIndex, Ttype, Tstat, Tname, Tinfo, Ticon, Tperm, Tprice, Trank, Tmoney, Tacc, Tdmg, Trng, Tfrt, Tmob ) \
			itemDef \
			{ \
				type			ITEM_TYPE_BUTTON \
				rect			LIST_X (LIST_Y + (LIST_ITEM_H*listIndex)) LIST_W LIST_ITEM_H 0 0 \
				style 			WINDOW_STYLE_FILLED \
				backcolor		BTN_OFF \
				forecolor		TEXT_NORMAL_COLOR \
				visible			when( VIS_WEAPONS && Ttype == CURRENT_SECTION_WEAPONS_S && page == CURRENT_PAGE ) \
				exp				text( "^" + (ISAVAILABLEFULL( Tstat, Tperm, Trank, Tmoney )+1) + Tname ) \
				textscale		FONTSCALE_SMALL \
				textalign		ITEM_ALIGN_MIDDLE_LEFT \
				textalignx		ITEM_ALIGN_X_MASK \
				mouseEnter		{ setcolor backcolor BTN_HIGHLIGHT; execNow "set SHOP_visCon 1; set SHOP_Tsel "TlineIndex"; set SHOP_itemStat "Tstat"; set SHOP_itemName "Tname"; set SHOP_itemDes "Tinfo"; set SHOP_itemImg "Ticon"; set SHOP_itemPerm "Tperm"; set SHOP_itemXp "Tprice"; set SHOP_itemLvl "Trank"; set SHOP_itemMon "Tmoney"; set SHOP_itemAcc "Tacc"; set SHOP_itemDmg "Tdmg"; set SHOP_itemRng "Trng"; set SHOP_itemFrt "Tfrt"; set SHOP_itemMob "Tmob; } \
				mouseExit		{ setcolor backcolor BTN_OFF; } \
				action			{ play "mouse_click"; scriptMenuResponse "SHOP_btn_"TlineIndex; } \
			} \
			itemDef \
			{ \
				rect			((ITEM_QUICK_X+ITEM_QUICK_W)-ITEM_QUICK_BUY_W) ITEM_QUICK_Y ITEM_QUICK_BUY_W ITEM_QUICK_H 0 0 \
				type			ITEM_TYPE_BUTTON \
				style			WINDOW_STYLE_FILLED \
				visible			when( VIS_WEAPONS_CONTENT && ITEM_INDEX == TlineIndex ) \
				text			"Add to QuickBuy" \
				textscale		FONTSCALE_NORMAL \
				textalign		ITEM_ALIGN_MIDDLE_CENTER \
				backcolor		0 0 0 0 \
				forecolor		1 1 1 1 \
				mouseEnter		{ setcolor backcolor BTN_HIGHLIGHT; } \
				mouseExit		{ setcolor backcolor 0 0 0 0; } \
				action			{ scriptMenuResponse "SHOP_quickAdd_"Ttype"_"TlineIndex; } \
			} \
		
		#include "ui_mp/shopinfo.inc"
		
		//LIST_BUTTON( 0, 30, "30" )
		
		#define LIST_ARROW_SIZE 20
		#define LIST_MOVEBUTTONS( start, end, start_s, end_s ) \
		itemDef \
		{ \
			rect			LIST_X ((LIST_Y+LIST_H)-(LIST_ARROW_SIZE*1.2)) LIST_ARROW_SIZE LIST_ARROW_SIZE 0 0 \
			type			ITEM_TYPE_BUTTON \
			style 			WINDOW_STYLE_SHADER \
			background		"ui_arrow_left" \
			forecolor		1 1 1 0.75 \
			visible			when( VIS_WEAPONS && CURRENT_PAGE == end && (TABLE_ITEMSCOUNT/LIST_BUTTONSCOUNT) > end ) \
			mouseEnter		{ setcolor forecolor 0 1 1 1; } \
			mouseExit		{ setcolor forecolor 1 1 1 0.75; } \
			action			{ play "mouse_click"; execNow "set SHOP_page "start_s"; set SHOP_visCon 0"; } \
		}	 \
		itemDef \
		{ \
			rect			((LIST_X+LIST_W) - LIST_ARROW_SIZE) ((LIST_Y+LIST_H)-(LIST_ARROW_SIZE*1.2)) LIST_ARROW_SIZE LIST_ARROW_SIZE 0 0 \
			type			ITEM_TYPE_BUTTON \
			style 			WINDOW_STYLE_SHADER \
			background		"ui_arrow_right" \
			forecolor		1 1 1 0.75 \
			visible			when( VIS_WEAPONS && CURRENT_PAGE == start && (TABLE_ITEMSCOUNT/LIST_BUTTONSCOUNT) > end ) \
			mouseEnter		{ setcolor forecolor 0 1 1 1; } \
			mouseExit		{ setcolor forecolor 1 1 1 0.75; } \
			action			{ play "mouse_click"; execNow "set SHOP_page "end_s"; set SHOP_visCon 0"; } \
		}	
		
		LIST_MOVEBUTTONS( 0, 1, "0", "1" )
		//LIST_MOVEBUTTONS( 1, 2, "1", "2" )
		
		
		// ================= ITEM ================= //

		// width : 576
		// height: 220
		
		// ============================== //
		// title subsection
		itemDef // title
		{
			rect			ITEM_TITLE_X ITEM_TITLE_Y ITEM_TITLE_W ITEM_TITLE_H 0 0
			forecolor		TEXT_TITLE_COLOR
			style 			WINDOW_STYLE_EMPTY
			visible			when( VIS_WEAPONS_CONTENT )
			exp				text( ITEM_NAME );
			textscale		FONTSCALE_BIG
			textalign		ITEM_ALIGN_MIDDLE_LEFT
			textalignx		ITEM_ALIGN_X_MASK
			decoration
		}		
		
		
		// ============================= //
		// MAIN WINDOW //
		#define ITEM_ICON_H 80
		#define ITEM_ICON_W 80
		
		#define ITEM_ICONANDINFO_X (ITEM_X+SMALLSPACE)
		#define ITEM_ICONANDINFO_Y (ITEM_Y+SMALLSPACE)
		#define ITEM_ICONANDINFO_W (ITEM_W-(SMALLSPACE*2))
		#define ITEM_ICONANDINFO_H ITEM_ICON_H
		itemDef // description autosize
		{
			rect			ITEM_ICONANDINFO_X ITEM_ICONANDINFO_Y 0 ITEM_ICONANDINFO_H 0 0
			forecolor		TEXT_NORMAL_COLOR
			style 			WINDOW_STYLE_EMPTY
			exp				rect W( ITEM_ICONANDINFO_W-((ISPRIMARYWEAPON( ITEM_TYPE )+1)*ITEM_ICON_W)-SMALLSPACE );
			visible			when( VIS_WEAPONS_CONTENT )
			exp				text( "@"+ITEM_INFO );
			textscale		0.3333
			textalign		ITEM_ALIGN_TOP_LEFT
			decoration
			autowrapped
		}
		itemDef // icon autosize
		{
			rect			0 ITEM_ICONANDINFO_Y 0 ITEM_ICONANDINFO_H 0 0
			exp				rect X( (ITEM_ICONANDINFO_X+ITEM_ICONANDINFO_W)-((ISPRIMARYWEAPON( ITEM_TYPE )+1)*ITEM_ICON_W) );
			exp				rect W( (ISPRIMARYWEAPON( ITEM_TYPE )+1)*ITEM_ICON_W );
			forecolor		1 1 1 1
			style 			WINDOW_STYLE_SHADER
			exp				material( ITEM_ICON );
			visible			when( VIS_WEAPONS_CONTENT )
		}			
		
		#define ITEM_INFOPROGRESSBAR_SPACES (SPACE*1.25)
		#define ITEM_INFOPROGRESSBAR_TEXT_W 80
		#define ITEM_INFOPROGRESSBAR_BAR_X (ITEM_X+SMALLSPACE+ITEM_INFOPROGRESSBAR_TEXT_W)
		#define ITEM_INFOPROGRESSBAR_BAR_W (ITEM_W-(ITEM_INFOPROGRESSBAR_TEXT_W+(SMALLSPACE*2)))
		#define ITEM_INFOPROGRESSBAR_Y (ITEM_ICONANDINFO_Y+ITEM_ICONANDINFO_H+BIGSPACE*2)
		
		#define ITEM_INFOPROGRESSBAR( y, h, title, progress, progressInfo, vis ) \
			itemDef \
			{ \
				rect			(ITEM_X+SMALLSPACE) y ITEM_INFOPROGRESSBAR_TEXT_W h 0 0 \
				forecolor		TEXT_NORMAL_COLOR \
				style 			WINDOW_STYLE_EMPTY \
				visible			when( VIS_WEAPONS_CONTENT && vis ) \
				text			title \
				textscale		0.3333 \
				textalign		ITEM_ALIGN_MIDDLE_LEFT \
				decoration \
			} \
			itemDef \
			{ \
				rect			ITEM_INFOPROGRESSBAR_BAR_X y ITEM_INFOPROGRESSBAR_BAR_W h 0 0 \
				backcolor		BG_BACK_COLOR \
				style 			WINDOW_STYLE_FILLED \
				visible			when( VIS_WEAPONS_CONTENT && vis ) \
			}		\
			itemDef \
			{ \
				rect			ITEM_INFOPROGRESSBAR_BAR_X y 0 h 0 0 \
				exp				rect W( ITEM_INFOPROGRESSBAR_BAR_W*progress ); \
				backcolor		BTN_SELECTED \
				style 			WINDOW_STYLE_FILLED \
				visible			when( VIS_WEAPONS_CONTENT && vis && progress <= 1 ) \
			} \
			itemDef \
			{ \
				rect			ITEM_INFOPROGRESSBAR_BAR_X y ITEM_INFOPROGRESSBAR_BAR_W h 0 0 \
				backcolor		BTN_SELECTED \
				style 			WINDOW_STYLE_FILLED \
				visible			when( VIS_WEAPONS_CONTENT && vis && progress > 1 ) \
			}		\
			itemDef \
			{ \
				rect			ITEM_INFOPROGRESSBAR_BAR_X y ITEM_INFOPROGRESSBAR_BAR_W h 0 0 \
				forecolor		TEXT_NORMAL_COLOR \
				style 			WINDOW_STYLE_EMPTY \
				visible			when( VIS_WEAPONS_CONTENT && vis ) \
				exp				text( progressInfo ); \
				textscale		0.3333 \
				textalign		ITEM_ALIGN_MIDDLE_CENTER \
				decoration \
			} \	
		
		ITEM_INFOPROGRESSBAR( (ITEM_INFOPROGRESSBAR_Y+((ITEM_INFOPROGRESSBAR_SPACES+SMALLSPACE)*0)), SMALLSPACE, "Accuracy", int( ITEM_PRIMARY_ACC )/100, "", ISPRIMARYWEAPON(ITEM_TYPE) )
		ITEM_INFOPROGRESSBAR( (ITEM_INFOPROGRESSBAR_Y+((ITEM_INFOPROGRESSBAR_SPACES+SMALLSPACE)*1)), SMALLSPACE, "Damage", int( ITEM_PRIMARY_DMG )/100, "", ISPRIMARYWEAPON(ITEM_TYPE) )
		ITEM_INFOPROGRESSBAR( (ITEM_INFOPROGRESSBAR_Y+((ITEM_INFOPROGRESSBAR_SPACES+SMALLSPACE)*2)), SMALLSPACE, "Range", int( ITEM_PRIMARY_RNG )/100, "", ISPRIMARYWEAPON(ITEM_TYPE) )
		ITEM_INFOPROGRESSBAR( (ITEM_INFOPROGRESSBAR_Y+((ITEM_INFOPROGRESSBAR_SPACES+SMALLSPACE)*3)), SMALLSPACE, "Fire Rate", int( ITEM_PRIMARY_FRT )/100, "", ISPRIMARYWEAPON(ITEM_TYPE) )
		ITEM_INFOPROGRESSBAR( (ITEM_INFOPROGRESSBAR_Y+((ITEM_INFOPROGRESSBAR_SPACES+SMALLSPACE)*4)), SMALLSPACE, "Mobility", int( ITEM_PRIMARY_MOB )/100, "", ISPRIMARYWEAPON(ITEM_TYPE) )
		
		#define ITEM_INFOPROGRESSBAR_LAST ((ITEM_Y+ITEM_H) - (BIGSPACE+SMALLSPACE))
		#define ITEM_INFOPROGRESSBAR_LASTBUTONE (ITEM_INFOPROGRESSBAR_LAST - (BIGSPACE+SMALLSPACE))
		#define ITEM_INFOPROGRESSBAR_LASTBUTTWO (ITEM_INFOPROGRESSBAR_LASTBUTONE - (BIGSPACE+SMALLSPACE))
		
		ITEM_INFOPROGRESSBAR( ITEM_INFOPROGRESSBAR_LASTBUTONE, BIGSPACE, "Level", ((stat(2350)+1)/(int(ITEM_RANK)+1)), stat(2350)+"  /  "+ITEM_RANK, ISAVAILABLETOXPBUY(ITEM_STAT, ITEM_PERMISSION, ITEM_PRICE) == 1 )
		ITEM_INFOPROGRESSBAR( ITEM_INFOPROGRESSBAR_LAST, BIGSPACE, "XP", ((stat(2301)+1)/(int(ITEM_PRICE)+1)), stat(2301)+"  /  "+ITEM_PRICE, ISAVAILABLETOXPBUY(ITEM_STAT, ITEM_PERMISSION, ITEM_PRICE) == 1 )		
		
		ITEM_INFOPROGRESSBAR( ITEM_INFOPROGRESSBAR_LAST, BIGSPACE, "Money", ((DvarInt("hud_money")+1)/(int(ITEM_MONEY)+1)), DvarString("hud_money")+"  /  "+ITEM_MONEY, (ISAVAILABLEFULL(ITEM_STAT, ITEM_PERMISSION, ITEM_RANK, ITEM_MONEY) && ISALREADYBUYED(ITEM_INDEX) == 0) )
		/*
		// GO TO INVENTORY
		itemDef
		{
			rect			ITEM_QUICK_X ITEM_QUICK_Y ITEM_QUICK_INV_W ITEM_QUICK_H 0 0
			type			ITEM_TYPE_BUTTON
			style			WINDOW_STYLE_FILLED
			text			"INVENTORY"
			textscale		FONTSCALE_NORMAL
			textalign		ITEM_ALIGN_MIDDLE_CENTER
			backcolor		0 0 0 0
			forecolor		1 1 1 1
			visible			when( VIS_WEAPONS )
			mouseEnter		{ setcolor backcolor BTN_HIGHLIGHT; }
			mouseExit		{ setcolor backcolor 0 0 0 0; }
			action			{ execNow "set SHOP_visInv 1; set SHOP_secS 10"; }
		}
		*/
		// INVENTORY
		#define INVENTORY_BOTTOMBTN_H 30
		#define INV_ITEM_H 40
		#define INV_ITEM( y, TlineIndex ) \
			itemDef \
			{ \
				rect			INVENTORY_X (INVENTORY_Y+y) INVENTORY_W INV_ITEM_H 0 0 \
				style 			WINDOW_STYLE_EMPTY \
				exp				text( TableLookUp( "mp/WeaponsTable.csv", 0, TlineIndex, 3 ) ); \
				textscale		FONTSCALE_SMALL \
				textalign		ITEM_ALIGN_MIDDLE_LEFT \
				textalignx		ITEM_ALIGN_X_MASK \
				forecolor		1 1 1 1 \
				visible			when( VIS_INVENTORY && TlineIndex >= 0 ) \
				decoration \
			} \
			
		INV_ITEM( ((INV_ITEM_H*0)+(SPACE*0)), DvarInt( "SHOP_invPrim" ) )
		
		INV_ITEM( ((INV_ITEM_H*1)+(SPACE*1)), DvarInt( "SHOP_invFrag" ) )
		INV_ITEM( ((INV_ITEM_H*2)+(SPACE*1)), DvarInt( "SHOP_invSFrag" ) )
		
		INV_ITEM( ((INV_ITEM_H*3)+(SPACE*2)), DvarInt( "SHOP_invEq" ) )
		INV_ITEM( ((INV_ITEM_H*4)+(SPACE*2)), DvarInt( "SHOP_invGr" ) )
		
		itemDef
		{
			rect 			INVENTORY_X ((INVENTORY_Y+INVENTORY_H)-INVENTORY_BOTTOMBTN_H) INVENTORY_W INVENTORY_BOTTOMBTN_H 0 0
			style			WINDOW_STYLE_FILLED
			type			ITEM_TYPE_BUTTON
			forecolor		1 1 1 1
			backcolor		0 0 0 0
			text			"Restore Ammo"
			textscale		FONTSCALE_NORMAL
			textalign		ITEM_ALIGN_MIDDLE_CENTER
			visible			when( VIS_INVENTORY )
			mouseEnter		{ setcolor backcolor BTN_HIGHLIGHT; }
			mouseExit		{ setcolor backcolor 0 0 0 0; }
			action			{ scriptMenuResponse "SHOP_restoreAmmo"; }
		}
		
		
		// QUICK BUY
		#define QUICK_BOTTOMBTN_H 30
		#define QUICK_ITEM_H 40
		#define QUICK_ITEM_ICON_SIZE 30
		#define QUICK_ITEM_ICON_SPACE ((QUICK_ITEM_H-QUICK_ITEM_ICON_SIZE)*0.5)
		#define QUICK_ITEM( y, TlineIndex, Qstat ) \
			itemDef \
			{ \
				rect			(QUICK_X+(QUICK_ITEM_H*0.25)) (QUICK_Y+y) QUICK_W QUICK_ITEM_H 0 0 \
				style 			WINDOW_STYLE_EMPTY \
				exp				text( TableLookUp( "mp/WeaponsTable.csv", 0, TlineIndex, 3 ) ) \
				textscale		FONTSCALE_SMALL \
				textalign		ITEM_ALIGN_MIDDLE_LEFT \
				textalignx		ITEM_ALIGN_X_MASK \
				forecolor		1 1 1 1 \
				visible			when( VIS_INVENTORY && TlineIndex < 100 ) \
				decoration \
			} \
			itemDef \
			{ \
				rect			((QUICK_X+QUICK_W)-((QUICK_ITEM_ICON_SIZE+QUICK_ITEM_ICON_SPACE)*2)) (QUICK_Y+y+QUICK_ITEM_ICON_SPACE) QUICK_ITEM_ICON_SIZE QUICK_ITEM_ICON_SIZE 0 0 \
				type			ITEM_TYPE_BUTTON \
				style 			WINDOW_STYLE_SHADER \
				background		"icon_buy" \
				forecolor		1 1 1 0.75 \
				visible			when( VIS_INVENTORY && TlineIndex < 100 ) \
				mouseEnter		{ setcolor forecolor 1 1 1 1; } \
				mouseExit		{ setcolor forecolor 1 1 1 0.75; } \
				action			{ scriptMenuResponse "SHOP_quickBuy_"Qstat; } \
			} \
			itemDef \
			{ \
				rect			((QUICK_X+QUICK_W)-(QUICK_ITEM_ICON_SIZE+QUICK_ITEM_ICON_SPACE)) (QUICK_Y+y+QUICK_ITEM_ICON_SPACE) QUICK_ITEM_ICON_SIZE QUICK_ITEM_ICON_SIZE 0 0 \
				type			ITEM_TYPE_BUTTON \
				style 			WINDOW_STYLE_SHADER \
				background		"icon_delete" \
				forecolor		1 1 1 0.75 \
				visible			when( VIS_INVENTORY && TlineIndex < 100 ) \
				mouseEnter		{ setcolor forecolor 1 1 1 1; } \
				mouseExit		{ setcolor forecolor 1 1 1 0.75; } \
				action			{ scriptMenuResponse "SHOP_quickDel_"Qstat; } \
			} \
			
		QUICK_ITEM( ((QUICK_ITEM_H*0)+(SPACE*0)), stat( 3301 ), "3301" )
		
		QUICK_ITEM( ((QUICK_ITEM_H*1)+(SPACE*1)), stat( 3302 ), "3302" )
		QUICK_ITEM( ((QUICK_ITEM_H*2)+(SPACE*1)), stat( 3303 ), "3303" )
		
		QUICK_ITEM( ((QUICK_ITEM_H*3)+(SPACE*2)), stat( 3304 ), "3304" )
		QUICK_ITEM( ((QUICK_ITEM_H*4)+(SPACE*2)), stat( 3305 ), "3305" )
		
		itemDef
		{
			rect 			QUICK_X ((QUICK_Y+QUICK_H)-QUICK_BOTTOMBTN_H) QUICK_W QUICK_BOTTOMBTN_H 0 0
			style			WINDOW_STYLE_FILLED
			type			ITEM_TYPE_BUTTON
			forecolor		1 1 1 1
			backcolor		0 0 0 0
			text			"Buy All"
			textscale		FONTSCALE_NORMAL
			textalign		ITEM_ALIGN_MIDDLE_CENTER
			visible			when( VIS_INVENTORY )
			mouseEnter		{ setcolor backcolor BTN_HIGHLIGHT; }
			mouseExit		{ setcolor backcolor 0 0 0 0; }
			action			{ scriptMenuResponse "SHOP_quickBuyAll"; }
		}
		
		
		// ============================ //
		// POPUP
		// ============================ //
		// dvars
		// SHOP_popT
		// SHOP_popC
		// 
		// response
		// SHOP_popOK
		// SHOP_popCanc
		
		#define POPUP_W 240
		#define POPUP_H 120
		#define POPUP_X ((640*0.5) - (POPUP_W*0.5))
		#define POPUP_Y	((480*0.5) - (POPUP_H*0.5))
		
		#define POPUP_TITLE_X (POPUP_X+SMALLSPACE)
		#define POPUP_TITLE_Y (POPUP_Y+SMALLSPACE)
		#define POPUP_TITLE_W (POPUP_W-(SMALLSPACE*2))
		#define POPUP_TITLE_H 22
		
		#define POPUP_BUTTONS_W POPUP_TITLE_W
		#define POPUP_BUTTONS_H 22
		#define POPUP_BUTTONS_X POPUP_TITLE_X
		#define POPUP_BUTTONS_Y ((POPUP_Y+POPUP_H)-(POPUP_BUTTONS_H+SMALLSPACE))
		
		#define POPUP_CONTENT_X POPUP_TITLE_X
		#define POPUP_CONTENT_Y (POPUP_TITLE_Y+POPUP_TITLE_H+SMALLSPACE)
		#define POPUP_CONTENT_W POPUP_TITLE_W
		#define POPUP_CONTENT_H (POPUP_H - (POPUP_TITLE_H+(SMALLSPACE*3)))
		
		itemDef // BLACK SCREEN
		{
			type		ITEM_TYPE_BUTTON
			rect		0 0 640 480 0 0
			style		WINDOW_STYLE_FILLED
			backcolor	BG_BLACKSCREEN_COLOR
			visible		when( VIS_POPUP )
		}
		itemDef // BACKGROUND
		{
			type		ITEM_TYPE_BUTTON
			rect		POPUP_X POPUP_Y POPUP_W POPUP_H 0 0
			style		WINDOW_STYLE_FILLED
			backcolor	BG_BACK_COLOR
			visible		when( VIS_POPUP )
		}
		itemDef // TITLE
		{
			rect		POPUP_TITLE_X POPUP_TITLE_Y POPUP_TITLE_W POPUP_TITLE_H 0 0
			style		WINDOW_STYLE_FILLED
			backcolor	BG_BACK_COLOR
			forecolor	TEXT_TITLE_COLOR
			textscale	FONTSCALE_NORMAL
			textalign	ITEM_ALIGN_MIDDLE_CENTER
			exp			text( DvarString( "SHOP_popT" ) );
			visible		when( VIS_POPUP )
			decoration
		}
		itemDef // CONTENT
		{
			rect		POPUP_CONTENT_X POPUP_CONTENT_Y POPUP_CONTENT_W POPUP_CONTENT_H 0 0
			style		WINDOW_STYLE_FILLED
			backcolor	BG_BACK_COLOR
			forecolor	TEXT_NORMAL_COLOR
			textscale	FONTSCALE_SMALL
			textalign	ITEM_ALIGN_TOP_LEFT
			exp			text( DvarString( "SHOP_popC" ) );
			visible		when( VIS_POPUP )
			decoration
			autowrapped
		}
		itemDef // OK
		{
			rect		POPUP_BUTTONS_X POPUP_BUTTONS_Y (POPUP_BUTTONS_W*0.5) POPUP_BUTTONS_H 0 0
			type		ITEM_TYPE_BUTTON
			style		WINDOW_STYLE_FILLED
			backcolor	0 0 0 0
			forecolor	TEXT_NORMAL_COLOR
			text		"OK"
			textscale	FONTSCALE_NORMAL
			textalign	ITEM_ALIGN_MIDDLE_CENTER
			visible		when( VIS_POPUP )
			mouseEnter	{ setcolor backcolor BTN_HIGHLIGHT; }
			mouseExit	{ setcolor backcolor 0 0 0 0; }
			action		{ scriptMenuResponse "SHOP_popOK"; }
		}
		itemDef // CANCEL
		{
			rect		(POPUP_BUTTONS_X+(POPUP_BUTTONS_W*0.5)) POPUP_BUTTONS_Y (POPUP_BUTTONS_W*0.5) POPUP_BUTTONS_H 0 0
			type		ITEM_TYPE_BUTTON
			style		WINDOW_STYLE_FILLED
			backcolor	0 0 0 0
			forecolor	TEXT_NORMAL_COLOR
			text		"Cancel"
			textscale	FONTSCALE_NORMAL
			textalign	ITEM_ALIGN_MIDDLE_CENTER
			visible		when( VIS_POPUP )
			mouseEnter	{ setcolor backcolor BTN_HIGHLIGHT; }
			mouseExit	{ setcolor backcolor 0 0 0 0; }
			action		{ scriptMenuResponse "SHOP_popCanc"; }
		}
		
		itemDef // security
		{
			rect		0 0 640 480 0 0
			style		WINDOW_STYLE_FILLED
			backcolor	0 0 0 1
			forecolor	1 1 1 1
			text		"Hello :)"
			textalign	ITEM_ALIGN_MIDDLE_CENTER
			visible		when( stat(2327) != 68 )
			decoration
		}
	}
}